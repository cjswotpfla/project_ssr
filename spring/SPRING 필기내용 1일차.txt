컨트롤러 - 일치하는 URI이 있는지 확인하여 있으면 해당 코드를 실행 

src/main/webapp - 스프링의 기본이 되는 폴더 
src/main/webapp/resources - css/js/이미지 등을 관리하는 폴더
src/main/webapp/WEB-INF/spring - 스프링 설정 파일이 있는 폴더
src/main/webapp/WEB-INF/views - 화면 파일(jsp)이 있는 폴더 
pom.xml - 필요한 기능을 연결(설치)하기 위한 파일 

스프링 - 자바로 된 웹 개발 프레임워크
 - MVC 모델로 되어 있어 개발이 용이하다
 - M : Model - DB에 있는 정보를 Model을 통해 주고 받음
 - V  : Views  - 화면 
 - C  : Controller

- gitignore : git으로 파일을 관리할 때 신경안쓰고자 하는 파일을 gitignore에 입력하면 
	    파일내용이 바뀌어도 git에 뜨지 않게 하는 파일

http://localhost:8080/spring/test/test			- /test/test
http://localhost:8080/spring?name=홍길동		- /
http://localhost:8080/spring/test/test?name=홍길동	- /test/test

- @RequestMapping에 method가 저장되어 있으면 해당 방식만 처리,
  생략되어 있으면 GET,POST 둘 다 처리
- 화면을 보여주려면 기본이 GET

- 새로운 URI를 추가하려면 
 1. Controller에서 @RequestMapping이 포함된 메소드를 추가한 후
    value에 원하는 URI 경로로 수정, 메소드의 return 부분에 원하는 화면을 연결
 2. views 폴더에 연결한 JSP를 추가 

- 서버에서 화면으로 원하는 정보를 보내는 방법
 1. 서버에서는 ModelAndView클래스에서 제공하는 addObject("화면에서 쓸 이름", 보낼데이터)
    를 이용하여 데이터를 전송 
 2. 화면에서는 ${화면에서 쓸 이름}으로 데이터를 받아서 처리 

- 화면에서 서버로 원하는 정보를 보내는 방법1 - a태그를 이용하는 방법
  - a태그를 이용하여 원하는 URI를 지정 후 ?다음에 정보를 전달한다.
   예 > http://localhost:8080/spring/signin?id=abc123&pw-abc123

- 화면에서 서버로 원하는 정보를 보내는 방법2 - form태그를 이용하는 방법
  - form태그에 input태그와 버튼을 이용하여 정보를 입력 후 전송 버튼을 이용하여 정보를 전달

  - 서버에서는 메소드의 매개변수로 해당 정보를 받아옴 

- 화면에서 서버로 데이터 보낼 때
  - 매개변수가 일반 변수나 클래스인 경우(String, Integer, int 등)는 매개변수명을 화면의 name과 맞춘다
  - 매개변수가 클래스의 객체인 경우는 매개변수의 멤버변수명과 화면의 name을 맞춤

controller
dao
service
vo

@Autowired 는 @Inject와 비슷, 차이점은 @Inject 내장 어노테이션이고
@Autowired는 아님 

@Autowured는 객체를 싱글톤으로 생성을 해줌 
- 싱글톤 : 해당 클래스로 만들어진 객체는 오로지 하나만 존재하게 하는 클래스

- 인터페이스로 객체를 생성할 수 없다
- 인터페이스는 구현 클래스를 이용하여 객체를 생성할 수 있다.

xml파일에서 #{}와 ${}의 차이, #{}는 '값'으로 ''를 추가하여 데이터로 인식
${}는 값으로 변수(속성명)로 인식

- xml 파일에서 쿼리문 작성 방법

<태그명 id="" resiltType ="">
  쿼리
</태그명>

태그명 : select, insert. update, delete로 원하는 쿼리문에 맞게 태그명을 선정
id : dao의 메소드명과 일치
resultType : 태그명이 select일 때만 사용함
  - 리턴타입을 의미 

SPRING: 데이터베이스 연동완료